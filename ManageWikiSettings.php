<?php

/**
 * ManageWiki settings are added using the variable below.
 *
 * associativeKey: the associative array key. Only used if you are setting the associative value.
 * name: the displayed name of the setting on Special:ManageWiki/settings.
 * from: a text entry of which extension is required for this setting to work. If added by MediaWiki core, use 'mediawiki'.
 * global: set to true if the setting is added by MediaWiki core or a global extension or skin.
 * type: configuration type. See below for available options.
 * overridedefault: a string/array override default when no existing value exist.
 * help: string providing help information for the setting.
 * section: string name of groupings for settings.
 * requires: an array, string, or integer. See below for available types that can be used here.
 *
 * 'type' can be one of:
 *
 * check: adds a checkbox.
 * database: adds a textbox with input validation, verifying that its value is a valid database name.
 * float: adds a textbox with float validation (requires: minfloat and maxfloat which are minimum and maximum float values).
 * integer: adds a textbox with integer validation (requires: minint and maxint which are minimum and maximum integer values).
 * integers: see above, just supports multiple and does not require a min or max integer value.
 * language: adds a drop-down for language selection (all which are known to MediaWiki).
 * list: adds a list of options (requires: options, which is an array in form of display => internal value).
 * list-multi: see above, just that multiple can be selected.
 * list-multi-bool: see above, just outputs are $this => $bool.
 * matrix: adds an array of "columns" and "rows". Columns are the top array and rows will be the values.
 * preferences: adds a drop-down selection box for selecting multiple user preferences.
 * skin: adds a drop-down selection box for selecting a single enabled skin.
 * skins: adds a drop-down selection box for selecting multiple enabled skins.
 * text: adds a single line text entry.
 * texts: see above, except multiple text values for inserting into a configuration array.
 * timezone: adds a drop-down for timezone selection.
 * url: adds a single line text entry which requires a full URL.
 * user: adds an autocomplete text box to select a single user on the wiki.
 * users: see above, except multiple users.
 * usergroups: adds a drop-down selection box for selecting multiple user groups.
 * userrights: adds a drop-down selection box for selecting multiple user rights.
 * wikipage: add a textbox which will return an autocomplete drop-down list of wikipages. Returns standardised MediaWiki pages.
 * wikipages: see above, except multiple wikipages.
 *
 * 'requires' can be one of:
 *
 * activeusers: max integer amount of active users a wiki may have in order to be able to modify this setting.
 * articles: max integer amount of articles a wiki may have in order to be able to modify this setting.
 * extensions: array of extensions that must be enabled in order to modify this setting. Different from 'from'. Only use if it requires more than one extension.
 * pages: max integer amount of pages a wiki may have in order to be able to modify this setting.
 * permissions: array of permissions a user must have to be able to modify this setting. Regardless of this value, a user must always have the managewiki permission.
 * visibility: an array. See below for available options.
 * settings: an array.
 *
 * 'visibility' can be one of:
 *
 * state: a string. Can be either 'private' or 'public'. If set to 'private' this setting will only be visible on private wikis. If set to 'public' it will only be visible on public wikis.
 * permissions: an array. Set to an array of permissions required for the setting to be visible.
 */

$wgManageWikiSettings = [
	// Anti-Spam
	'wgCookieSetOnAutoblock' => [
		'name' => 'Cookie set on autoblock',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'anti-spam',
		'help' => 'Determines whether to set a cookie when a user is autoblocked. Doing so means that a blocked user, even after logging out and moving to a new IP address, will still be blocked.',
		'requires' => [],
	],
	'wgCookieSetOnIpBlock' => [
		'name' => 'Cookie set on IP block',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'anti-spam',
		'help' => 'Determines whether to set a cookie when an IP user is blocked. Doing so means that a blocked user, even after moving to a new IP address, will still be blocked.',
		'requires' => [],
	],
	'wgEmailConfirmToEdit' => [
		'name' => 'Email Confirm To Edit',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'anti-spam',
		'help' => 'Require users to confirm email address before they can edit. This effectively disables IP editing.',
		'requires' => [],
	],
	'wgRestrictionTypes' => [
		'name' => 'Restriction Types',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list-multi',
		'options' => [
			'Edit' => 'edit',
			'Move' => 'move',
			'Create' => 'create',
			'Upload' => 'upload',
			'Delete' => 'delete',
			'Protect' => 'protect',
			'Edit Content Model' => 'editcontentmodel',
		],
		'overridedefault' => [
			'create',
			'edit',
			'move',
			'upload',
		],
		'section' => 'anti-spam',
		'help' => 'Actions that can be restricted.',
		'requires' => [],
	],

	// Beta Feature related stuff

	// Categories
	'wgCategoryPagingLimit' => [
		'name' => 'Category Paging Limit',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 25,
		'maxint' => 5000,
		'overridedefault' => 200,
		'section' => 'categories',
		'help' => 'Paging limit for items in categories.',
		'requires' => [],
	],

	// Discussion
	'wgCommentStreamsEnableTalk' => [
		'name' => 'CommentStreams Enable Talk',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'discussion',
		'help' => 'Enable in talk namespaces',
		'requires' => [],
	],
	'wgCommentStreamsEnableSearch' => [
		'name' => 'CommentStreams Enable Search',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'discussion',
		'help' => 'Allow comments and their titles to appear in search results and search auto-complete?',
		'requires' => [],
	],
	'wgCommentStreamsNewestStreamsOnTop' => [
		'name' => 'CommentStreams Newest Streams On Top',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'discussion',
		'help' => 'Show newer comments first',
		'requires' => [],
	],
	'wgCommentStreamsUserAvatarPropertyName' => [
		'name' => 'CommentStreams User Avatar Property Name',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'discussion',
		'help' => 'If SocialProfile is enabled, it will display an avatar',
		'requires' => [],
	],
	'wgCommentStreamsEnableVoting' => [
		'name' => 'CommentStreams Enable Voting',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'discussion',
		'help' => 'Allows logged in users to vote thumbs up, thumbs down, or neither on top level comments.',
		'requires' => [],
	],
	'wgCommentStreamsModeratorFastDelete' => [
		'name' => 'CommentStreams Moderator Fast Delete',
		'from' => 'commentstreams',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'discussion',
		'help' => 'allows users with csdelete right to delete a comment and all of its replies in one action rather than having to individually delete all of the replies first.',
		'requires' => [],
	],
	'wgActiveUserDays' => [
		'name' => 'Active User Days',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 400,
		'overridedefault' => 30,
		'section' => 'editing',
		'help' => 'The number of days within which a person must make edits to be considered an "active" user.',
		'requires' => [],
	],
	'wgShowCreditsIfMax' => [
		'name' => 'Editing attribution',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'Show more authors.',
		'requires' => [],
	],
	'wgCodeEditorEnableCore' => [
		'name' => 'CodeEditor Enable Core',
		'from' => 'codeeditor',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'To disable the editor on JavaScript and CSS pages in the MediaWiki, User and other core namespaces, unset this option.',
		'requires' => [],
	],
	'wgReplaceTextResultsLimit' => [
		'name' => 'Replace Text Results Limit',
		'from' => 'replacetext',
		'type' => 'integer',
		'minint' => 10,
		'maxint' => 500,
		'overridedefault' => 250,
		'section' => 'editing',
		'help' => 'Limit for Replace Text results.',
		'requires' => [],
	],
	'wgPageCreationLog' => [
		'name' => 'Page Creation Log',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'editing',
		'help' => 'Whether to maintain a log of new page creations, which can be viewed at Special:Log/create.',
		'requires' => [],
	],
	'wgWatchlistExpiry' => [
		'name' => 'Allow Watchlist Expiry Time',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'editing',
		'help' => 'Whether to allow users to select a expiry time when adding an item to their watchlist',
		'requires' => [],
	],

	// Links
	'wgArticleCountMethod' => [
		'name' => 'Article Count Method',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list',
		'options' => [
			'Link' => 'link',
			'Any' => 'any',
		],
		'overridedefault' => 'link',
		'section' => 'links',
		'help' => 'Method used to determine if a page in a content namespace should be counted as a valid content page (article).',
		'requires' => [],
		'script' => [
			"$IP/maintenance/updateArticleCount.php" => [
				'update' => false,
			],
		],
	],
	'wgWhikiAdsConfig' => [
		'name' => 'Whiki Ads Config',
		'from' => 'whikiads',
		'global' => true,
		'type' => 'list',
		'options' => [
			'True' => true,
			'False' => false,
		],
		'overridedefault' => true,
		'section' => 'restricted',
		'help' => 'Determines whether ads are shown on this wiki.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],
	'wgCapitalLinks' => [
		'name' => 'Capital Links',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'links',
		'help' => 'Unset this to avoid forcing the first letter of links to capitals. Warning: This may break your existing wiki links.',
		'requires' => [],
	],
	'wgDisplayTitleFollowRedirects' => [
		'name' => 'Display Title Follow Redirects',
		'from' => 'displaytitle',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'links',
		'help' => 'If enabled, the Display Title extension will follow redirects.',
		'requires' => [],
	],
	'wgDisplayTitleHideSubtitle' => [
		'name' => 'Display Title Hide Subtitle',
		'from' => 'displaytitle',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'links',
		'help' => 'Enable this to hide the page\'s original title as a subtitle below the title bar, shown by the Display Title extension.',
		'requires' => [],
	],
	'wgEnableCanonicalServerLink' => [
		'name' => 'Enable Canonical Server Link',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'links',
		'help' => 'Output a <link rel="canonical"> tag on every page indicating the canonical server which should be used, i.e. $wgServer or $wgCanonicalServer.',
		'requires' => [],
	],
	'wgExternalLinkTarget' => [
		'name' => 'External Link Target',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list',
		'options' => [
			'Blank' => '_blank',
			'Default' => false,
		],
		'overridedefault' => false,
		'section' => 'links',
		'help' => 'Set a default target for external links.',
		'requires' => [],
	],
	'wgNoFollowLinks' => [
		'name' => 'NoFollow Links',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'links',
		'help' => 'If enabled, external links in wikitext will be given the <code>rel="nofollow"</code> attribute.',
		'requires' => [],
	],

	// Localisation (E.G i18n/timezone etc)
	'wgLocaltimezone' => [
		'name' => 'Timezone',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'timezone',
		'overridedefault' => 'UTC',
		'section' => 'localisation',
		'help' => 'This will adapt your wikis time over clock to whatever timezone you choose for all users, however it can be changed through user\'s preferences.',
		'requires' => [],
	],
	'wgAmericanDates' => [
		'name' => 'American Dates',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'localisation',
		'help' => 'Use \'mdy\' instead of \'dmy\' as the default date format, e.g. \'May 12\' instead of \'12 May\'?',
		'requires' => [],
	],

	// Parser Functions
	'wgEnableScaryTranscluding' => [
		'name' => 'Enable Scary Transcluding',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'parserfunctions',
		'help' => 'Allow templates to be imported/transcluded from another wiki.',
		'requires' => [],
	],
	'wgAllowSlowParserFunctions' => [
		'name' => 'Allow slow parser functions',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'parserfunctions',
		'help' => 'Parser functions are "magic words" that return a value or function, such as time, site details or page names.',
		'requires' => [],
	],
	'wgAllowDisplayTitle' => [
		'name' => 'Allow Display Title',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'parserfunctions',
		'help' => 'Allows use of {{DISPLAYTITLE}} magic word.',
		'requires' => [],
	],
	'wgRestrictDisplayTitle' => [
		'name' => 'Restrict Display Title',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'parserfunctions',
		'help' => 'Restrict {{DISPLAYTITLE}} to titles that normalize to the same canonical database key. Wikis with NoTitle extension installed have this config unset.',
		'requires' => [],
	],

	// Media/File
	'wgEnableUploads' => [
		'name' => 'Enable File Uploads',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'Check or uncheck this option if you want to enable or disable the upload of files on your wiki.',
		'requires' => [],
	],
	'wgAllowCopyUploads' => [
		'name' => 'Enable File Uploads Through URL',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'By default, Miraheze enables file upload only from a local media but with this option you can upload files remotely from other sites.',
		'requires' => [],
	],
	'wgCopyUploadsFromSpecialUpload' => [
		'name' => 'Enable File Uploads Through URL on Special:Upload',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'This option adds a textbox on Special:Upload enabling you to upload files from any URL.',
		'requires' => [],
	],
	'wgShowArchiveThumbnails' => [
		'name' => 'Show Old Thumbnails On Description Page',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'media',
		'help' => 'Whether to show thumbnails for old images on the image\'s description page.',
		'requires' => [],
	],
	'wgAllowExternalImages' => [
		'name' => 'Allow External Images',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'Determines whether or not MediaWiki will allow external images to be rendered inline with text',
		'requires' => [],
	],
	'wgNativeImageLazyLoading' => [
		'name' => 'Native Image Lazy Loading',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'Toggles native image lazy loading, via the "loading" attribute.',
		'requires' => [],
	],
	'wgSVGConverter' => [
		'name' => 'SVG Converter',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list',
		'options' => [
			'Inkscape' => 'inkscape',
			'ImageMagick' => 'ImageMagick',
		],
		'overridedefault' => 'ImageMagick',
		'section' => 'media',
		'help' => 'This picks the converter to convert Scalable Vector Graphics (SVG) to PNG. You may want to choose Inkscape if your SVG->PNG conversion results in a black image.',
		'requires' => [],
	],
	'wgMaxImageArea' => [
		'name' => 'Max Image Area',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => '1.25e7',
		'section' => 'media',
		'help' => 'Specifies the max pixels you can have in a image.',
		'requires' => [],
	],
	'wgMaxAnimatedGifArea' => [
		'name' => 'Max Animated Gif Area',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => '1.25e7',
		'section' => 'media',
		'help' => 'Force thumbnailing of animated GIFs above this size to a single frame instead of an animated thumbnail.',
		'requires' => [],
	],
	'wgFileExtensions' => [
		'name' => 'File Extensions',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list-multi',
		'options' => [
			'add' => 'add',
			'alist' => 'alist',
			'anim' => 'anim',
			'apk' => 'apk',
			'apng' => 'apng',
			'ascii' => 'ascii',
			'asset' => 'asset',
			'asv' => 'asv',
			'avi' => 'avi',
			'bfwav' => 'bfwav',
			'bib' => 'bib',
			'blend' => 'blend',
			'bmp' => 'bmp',
			'bnk' => 'bnk',
			'bst' => 'bst',
			'bz' => 'bz',
			'bz2' => 'bz2',
			'c' => 'c',
			'cap' => 'cap',
			'cfg' => 'cfg',
			'chr' => 'chr',
			'cls' => 'cls',
			'controller' => 'controller',
			'cpp' => 'cpp',
			'crt' => 'crt',
			'css' => 'css',
			'cue' => 'cue',
			'dae' => 'dae',
			'dat' => 'dat',
			'data' => 'data',
			'desktop' => 'desktop',
			'dia' => 'dia',
			'djvu' => 'djvu',
			'doc' => 'doc',
			'docx' => 'docx',
			'eot' => 'eot',
			'fbx' => 'fbx',
			'fig' => 'fig',
			'fla' => 'fla',
			'flac' => 'flac',
			'fpd' => 'fpd',
			'gb' => 'gb',
			'gba' => 'gba',
			'gbc' => 'gbc',
			'gbs' => 'gbs',
			'gif' => 'gif',
			'gp' => 'gp',
			'gps' => 'gps',
			'gpx' => 'gpx',
			'gz' => 'gz',
			'gz2' => 'gz2',
			'h' => 'h',
			'hes' => 'hes',
			'hpp' => 'hpp',
			'hxx' => 'hxx',
			'ico' => 'ico',
			'ini' => 'ini',
			'ipe' => 'ipe',
			'ips' => 'ips',
			'it' => 'it',
			'jfif' => 'jfif',
			'jpeg' => 'jpeg',
			'jpg' => 'jpg',
			'key' => 'key',
			'lua' => 'lua',
			'm4a' => 'm4a',
			'mat' => 'mat',
			'mbz' => 'mbz',
			'md' => 'md',
			'mid' => 'mid',
			'midi' => 'midi',
			'mma' => 'mma',
			'mmf' => 'mmf',
			'mmt' => 'mmt',
			'mkv' => 'mkv',
			'mod' => 'mod',
			'mov' => 'mov',
			'mp3' => 'mp3',
			'mp4' => 'mp4',
			'mptm' => 'mptm',
			'mus' => 'mus',
			'naf' => 'naf',
			'nes' => 'nes',
			'nsf' => 'nsf',
			'odg' => 'odg',
			'odp' => 'odp',
			'ods' => 'ods',
			'odt' => 'odt',
			'off' => 'off',
			'oga' => 'oga',
			'ogg' => 'ogg',
			'ogv' => 'ogv',
			'ogx' => 'ogx',
			'opk' => 'opk',
			'opus' => 'opus',
			'otf' => 'otf',
			'otg' => 'otg',
			'park' => 'park',
			'parkobj' => 'parkobj',
			'pcap' => 'pcap',
			'pdf' => 'pdf',
			'perf' => 'perf',
			'plot' => 'plot',
			'png' => 'png',
			'pps' => 'pps',
			'ppt' => 'ppt',
			'pptx' => 'pptx',
			'psd' => 'psd',
			'pub' => 'pub',
			'rar' => 'rar',
			'rtf' => 'rtf',
			's3m' => 's3m',
			'sav' => 'sav',
			'sbi' => 'sbi',
			'sc4' => 'sc4',
			'sc6' => 'sc6',
			'scss' => 'scss',
			'sea' => 'sea',
			'sfnt' => 'sfnt',
			'sh' => 'sh',
			'smc' => 'smc',
			'spc' => 'spc',
			'spl' => 'spl',
			'stl' => 'stl',
			'sty' => 'sty',
			'sv4' => 'sv4',
			'sv6' => 'sv6',
			'sv7' => 'sv7',
			'svg' => 'svg',
			'swf' => 'swf',
			'tar' => 'tar',
			'tar.gz' => 'tar.gz',
			'td4' => 'td4',
			'td6' => 'td6',
			'tex' => 'tex',
			'tga' => 'tga',
			'tif' => 'tif',
			'tiff' => 'tiff',
			'trk' => 'trk',
			'ttf' => 'ttf',
			'txt' => 'txt',
			'unity' => 'unity',
			'unitypackage' => 'unitypackage',
			'val' => 'val',
			'vit' => 'vit',
			'vrm' => 'vrm',
			'vsd' => 'vsd',
			'vst' => 'vst',
			'wav' => 'wav',
			'webm' => 'webm',
			'webp' => 'webp',
			'wma' => 'wma',
			'wmv' => 'wmv',
			'woff' => 'woff',
			'woff2' => 'woff2',
			'xcf' => 'xcf',
			'xdelta' => 'xdelta',
			'xls' => 'xls',
			'xlsx' => 'xlsx',
			'xlxs' => 'xlxs',
			'xm' => 'xm',
			'xml' => 'xml',
			'xps' => 'xps',
			'zip' => 'zip',
			'7z' => '7z',
		],
		'overridedefault' => [
			'djvu',
			'gif',
			'ico',
			'jpg',
			'jpeg',
			'ogg',
			'pdf',
			'png',
			'svg',
		],
		'section' => 'media',
		'help' => 'This is the list of preferred extensions for uploading files. Uploading files with extensions not selected in this list will trigger a warning.',
		'requires' => [],
	],
	'wgTmhEnableMp4Uploads' => [
		'name' => 'TimedMediaHandler Enable Mp4 Uploads',
		'from' => 'timedmediahandler',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'media',
		'help' => 'Allows to upload Mp4 files.',
		'requires' => [],
	],

	// Notifications

	// Permissions
	'wgImplicitGroups' => [
		'name' => 'Implicit Groups',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'usergroups',
		'overridedefault' => [
			'*',
			'user',
			'autoconfirmed'
		],
		'section' => 'permissions',
		'help' => 'Groups that aren\'t shown on Special:Listusers or somewhere else.',
		'requires' => [],
	],
	'wgWhitelistRead' => [
		'name' => 'Whitelist Read',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'wikipages',
		'exists' => false,
		'overridedefault' => [],
		'section' => 'permissions',
		'help' => 'Pages anyone may view.',
		'requires' => [
			'visibility' => [
				'state' => 'private',
			],
		],
	],

	// Preferences
	'wgHiddenPrefs' => [
		'name' => 'Hidden Preferences',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'preferences',
		'overridedefault' => [],
		'section' => 'preferences',
		'help' => 'An array of preferences to hide from Special:Preferences.',
		'requires' => [],
	],
	'wgSkipSkins' => [
		'name' => 'Skip Skins',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'skins',
		'overridedefault' => [],
		'section' => 'preferences',
		'help' => 'Array of skins to remove as a choice from user\'s preferences.',
		'requires' => [],
	],

	// Recent changes
	'wgFeedLimit' => [
		'name' => 'Feed Limit',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 1,
		'maxint' => 5000,
		'overridedefault' => 50,
		'section' => 'recentchanges',
		'help' => 'Set maximum number of results to return in syndication feeds (RSS, Atom) for eg Recentchanges, Newpages. Min. 1, Max. 5,000',
		'requires' => [],
	],
	'wgRCMaxAge' => [
		'name' => 'RecentChanges max age',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 1,
		'maxint' => 62208000,
		'overridedefault' => 180 * 24 * 3600,
		'section' => 'recentchanges',
		'help' => 'Items in the recentchanges table are periodically purged; entries older than this many seconds will go.',
		'requires' => [],
	],
	'wgRCLinkDays' => [
		'name' => 'RecentChanges Link Days',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list-multi',
		'options' => [
			'1 (86400 seconds)' => 1,
			'3 (259200 seconds)' => 3,
			'7 (604800 seconds)' => 7,
			'14 (1209600 seconds)' => 14,
			'30 (2592000 seconds)' => 30,
			'60 (5184000 seconds)' => 60,
			'90 (7776000 seconds)' => 90,
			'180 (15552000 seconds)' => 180,
			'360 (31104000 seconds)' => 360,
		],
		'overridedefault' => [ 1, 3, 7, 14, 30 ],
		'section' => 'recentchanges',
		'help' => 'List days options to list in the Special:Recentchanges and Special:Recentchangeslinked pages.',
		'requires' => [],
	],
	'wgRCLinkLimits' => [
		'name' => 'RecentChanges Link Limits',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list-multi',
		'options' => [
			'50' => 50,
			'100' => 100,
			'250' => 250,
			'500' => 500,
			'1000' => 1000,
			'1500' => 1500,
			'3000' => 3000,
			'5000' => 5000,
			'10000' => 10000,
		],
		'overridedefault' => [ 50, 100, 250, 500 ],
		'section' => 'recentchanges',
		'help' => 'List changes limits options to list in the Special:Recentchanges and Special:Recentchangeslinked pages.',
		'requires' => [],
	],
	'wgUseRCPatrol' => [
		'name' => 'Use RC Patrol',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'recentchanges',
		'help' => 'Use recent changes patrolling to check for vandalism? If disabled, exclamation points will no longer appear in recent changes next to unpatrolled edits.',
		'requires' => [],
	],

	// Restricted (settings that require the managewiki-restricted right)
	'wgSVGMetadataCutoff' => [
		'name' => 'SVG Metadata Cutoff',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 90000000,
		'overridedefault' => 262144,
		'section' => 'restricted',
		'help' => 'Don\'t read SVG metadata beyond this point.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],
	// If necessary we can increase maxint.
	'wgMaxArticleSize' => [
		'name' => 'Max Article Size',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 10000,
		'overridedefault' => 2048,
		'section' => 'restricted',
		'help' => 'Maximum page size in kilobytes.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],
	'wgMaxCredits' => [
		'name' => 'Editing attribution',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => -1,
		'maxint' => 25,
		'overridedefault' => 0,
		'section' => 'restricted',
		'help' => 'Number of editors to attribute.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],

	// SEO
	'wgEnableMetaDescriptionFunctions' => [
		'name' => 'Enable Meta Description Parser',
		'from' => 'description2',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'seo',
		'help' => 'Allows the use of the #description2 parser function to force the Meta Description of an article.',
		'requires' => [],
 	],
	 // SEO
	'wgDefaultRobotPolicy' => [
		'name' => 'Default Robot Policy',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'list',
		'options' => [
			'index,follow' => 'index,follow',
			'noindex,nofollow' => 'noindex,nofollow',
			'index,nofollow' => 'index,nofollow',
		],
		'overridedefault' => 'index,follow',
		'section' => 'seo',
		'help' => 'Allows specifying the default robot policy for all pages on the wiki.',
		'requires' => [],
	],
	'wgTwitterCardType' => [
		'name' => 'Twitter Card Type (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'list',
		'overridedefault' => 'summery_large_image',
		'section' => 'seo',
		'options' => [
			'Summary' => 'summary',
			'Summary large image' => 'summary_large_image',
		],
		'help' => 'Type of twitter card to use.',
		'requires' => [],
	],
	'wgGoogleSiteVerificationKey' => [
		'name' => 'Google Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Google Search Console.',
		'requires' => [],
	],
	'wgBingSiteVerificationKey' => [
		'name' => 'Bing Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Bing Webmaster Center.',
		'requires' => [],
	],
	'wgFacebookAppId' => [
		'name' => 'Facebook App Id (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'App Id for Facebook Insights.',
		'requires' => [],
	],
	'wgYandexSiteVerificationKey' => [
		'name' => 'Yandex Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Yandex Webmasters.',
		'requires' => [],
	],
	'wgAlexaSiteVerificationKey' => [
		'name' => 'Alexa Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Alexa Console.',
		'requires' => [],
	],
	'wgPinterestSiteVerificationKey' => [
		'name' => 'Pinterest Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Pinterest Console.',
		'requires' => [],
	],
	'wgNaverSiteVerificationKey' => [
		'name' => 'Naver Site Verification Key (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Site verification key for Naver.',
		'requires' => [],
	],
	'wgWikiSeoDefaultImage' => [
		'name' => 'Default SEO Image (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'text',
		'overridedefault' => null,
		'section' => 'seo',
		'help' => 'Set a default image to display in embeds if no image is set on the page. Value must be a valid image file in the format of "File.png". If this variable is not set the site\'s logo will be used.',
		'requires' => [],
	],
	'wgWikiSeoDisableLogoFallbackImage' => [
		'name' => 'Disable Logo Fallback Image (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'check',
		'overridedefault' => false,
		'section' => 'seo',
		'help' => 'Disable setting the logo as the fallback SEO image if no image was provided.',
		'requires' => [],
	],
	'wgWikiSeoEnableAutoDescription' => [
		'name' => 'Enable Auto Description (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'seo',
		'help' => 'Enable to try to request a description from textextracts, if no description was given, or the description key is set to \'textextracts\'.',
		'requires' => [
			'extensions' => [
				'textextracts',
				'wikiseo',
			],
		],
	],
	'wgWikiSeoTryCleanAutoDescription' => [
		'name' => 'Try Clean Auto Description (WikiSEO)',
		'from' => 'wikiseo',
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'seo',
		'help' => 'Enable if WikiSEO should try to remove dangling sentences when using descriptions from textextracts.',
		'requires' => [
			'extensions' => [
				'textextracts',
				'wikiseo',
			],
		],
	],


	// SocialTools

	// Styling (E.G skins/logos etc)
	'wgDefaultSkin' => [
		'name' => 'Default Skin',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'skin',
		'overridedefault' => 'vector',
		'section' => 'styling',
		'help' => 'Changes the visual interface to the selected skin for all users, however it can be changed through user\'s preferences, unless the skin is added to <code>$wgSkipSkins</code> in the Preferences tab.',
		'requires' => [],
	],
	'wgDefaultMobileSkin' => [
		'name' => 'Default Mobile Skin',
		'from' => 'mobilefrontend',
		'type' => 'skin',
		'overridedefault' => 'minerva',
		'section' => 'styling',
		'help' => 'Changes the default mobile skin to be used by the Mobile Frontend extension. Some skins may not be compatable.',
		'requires' => [],
	],
	'wgLogo' => [
		'name' => 'Logo',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'section' => 'styling',
		'help' => 'This will replace the default MediaWiki logo. Also sets the value of <code>$wgLogos[\'1x\']</code>.',
		'requires' => [],
	],
	'wgFavicon' => [
		'name' => 'Favicon',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => '/favicon.ico',
		'section' => 'styling',
		'help' => 'A favicon is a shortcut image that is displayed on your visitor\'s browser address bar and in the bookmarks page. Most often it is a smaller version of the logo. Please use 32x32 size.',
		'requires' => [],
	],
	'wgWordmark' => [
		'name' => 'Wordmark',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'This will set the value of <code>$wgLogos[\'wordmark\'][\'src\']</code>. Also used as wordmark for the various skins: Minerva copyright wordmark, Timeless mobile wordmark, modern Vector wordmark, and Cosmos wordmark. May be used elsewhere also.',
		'requires' => [],
	],
	'wgWordmarkWidth' => [
		'name' => 'Wordmark Width',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 9999,
		'overridedefault' => 116,
		'section' => 'styling',
		'help' => 'This will set the width value of the wordmark set by <code>$wgWordmark</code>. For use with the Minerva skin\'s copyright wordmark, this should be set to "116"',
		'requires' => [],
	],
	'wgWordmarkHeight' => [
		'name' => 'Wordmark Height',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 0,
		'maxint' => 9999,
		'overridedefault' => 18,
		'section' => 'styling',
		'help' => 'This will set the height value of the wordmark set by <code>$wgWordmark</code>. For use with the Minerva skin\'s copyright wordmark, this should be set to "18"',
		'requires' => [],
	],
	'wgIcon' => [
		'name' => 'Icon',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'text',
		'overridedefault' => false,
		'section' => 'styling',
		'help' => 'A version of the logo without wordmark and tagline.',
		'requires' => [],
	],
	'wgMaxTocLevel' => [
		'name' => 'Max Toc Level',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'integer',
		'minint' => 1,
		'maxint' => 99999,
		'overridedefault' => 999,
		'section' => 'styling',
		'help' => 'Maximum indent level of toc.',
		'requires' => [],
	],
	'wgAllowUserCss' => [
		'name' => 'Allow User Css',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Allow user Cascading Style Sheets (CSS). For example User:<user>/*.css.',
		'requires' => [],
	],
	'wgAllowUserJs' => [
		'name' => 'Allow User Js',
		'from' => 'mediawiki',
		'global' => true,
		'type' => 'check',
		'overridedefault' => true,
		'section' => 'styling',
		'help' => 'Allow user JavaScript pages. For example User:<user>/*.js.',
		'requires' => [],
	],

	// matomo 
	'wgMatomoAnalyticsSiteID' => [
		'name' => 'Matomo Analytics Site ID',
		'from' => 'matomoanalytics',
		'global' => true,
		'type' => 'integer',
		'overridedefault' => false,
		'section' => 'restricted',
		'help' => 'Site ID for Matomo tracking.',
		'requires' => [
			'permissions' => [
				'managewiki-restricted',
			],
		],
	],
];
